name: Build New Release

on:
  push:
    branches:
      - 'main'
      - 'develop'
  workflow_dispatch:


jobs:
  build-image:
    runs-on: self-hosted
    concurrency:
      group: ${{ github.workflow }}
      cancel-in-progress: false
    permissions:
      contents: write
    steps:
      - name: Install Required Packages
        run: |
          sudo apt update
          sudo apt upgrade -y
          sudo apt install -y mount \
          e2fsprogs \
          wget \
          xz-utils \
          util-linux \
          qemu-user-static \
          docker \
          docker.io \
          containerd \
          gh

      - name: Cleanup Build Folder
        run: |
          CONTAINERS=$(docker ps -q)
          if [ -n "$CONTAINERS" ]; then
            docker kill $CONTAINERS
          else
            echo "No containers to kill."
          fi
          for LOOPDEV in /dev/loop10 /dev/loop11; do
            if losetup $LOOPDEV >/dev/null 2>&1; then
              echo "Detaching $LOOPDEV"
              sudo losetup -d $LOOPDEV
            else
              echo "$LOOPDEV does not exist or is not in use"
            fi
          done
          rm -rf ./*.img
          rm -rf ./*.img.xz
          rm -rf ./src
          rm -rf ./finalsize

      - name: Checkout Repository
        uses: actions/checkout@v4
        with:
          path: 'src'

      - name: Build Docker Image
        run: |
          update-binfmts --enable qemu-arm
          update-binfmts --enable qemu-aarch64
          docker build --platform linux/arm/v7 -t build-img:1.0 ./src/docker/.

      - name: Create Loopback Device
        run: |
          wget -O base.img.xz https://downloads.raspberrypi.com/raspios_lite_arm64/images/raspios_lite_arm64-2024-07-04/2024-07-04-raspios-bookworm-arm64-lite.img.xz
          xz -vd base.img.xz
          dd if=/dev/zero of=pi-bot.img bs=1M count=4000
          losetup -v /dev/loop10 pi-bot.img
          losetup -v /dev/loop11 base.img
          dd if=/dev/loop11 of=/dev/loop10
          parted /dev/loop10 --script -- resizepart 2 100%
          e2fsck -yf /dev/loop10p2
          resize2fs /dev/loop10p2

      - name: Build Pi Image
        run: |
          docker run --rm --privileged -e PI_ROOT=/dev/loop10p2 --platform linux/arm/v7 -v /dev/loop10p2:/dev/loop10p2 -v ./src:/src build-img:1.0
          e2fsck -yf /dev/loop10p2

      - name: Compress Image
        run: xz -9 -ve ./pi-bot.img

      - name: Get Release Details
        run: |
          RELEASE_TITLE=$(head -n 1 ./src/changelog.md)
          echo "RELEASE_TITLE=$RELEASE_TITLE" >> $GITHUB_ENV

      - name: Publish Build
        env:
          GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          OWNER: ${{ github.repository_owner }}
          REPO: ${{ github.event.repository.name }}
          RELEASE_TITLE: ${{ env.RELEASE_TITLE }}
        run: |
          if [ "${GITHUB_REF}" == "refs/heads/main" ]; then
            gh release create "Alpha-$RELEASE_TITLE" -d \
              --title $RELEASE_TITLE \
              --notes-file src/changelog.md \
              --repo $GITHUB_REPOSITORY \
              ./pi-bot.img.xz
          else
            gh release create "Alpha-$RELEASE_TITLE" -d \
              --draft \
              --title $RELEASE_TITLE \
              --notes-file src/changelog.md \
              --repo $GITHUB_REPOSITORY \
              ./pi-bot.img.xz
          fi

